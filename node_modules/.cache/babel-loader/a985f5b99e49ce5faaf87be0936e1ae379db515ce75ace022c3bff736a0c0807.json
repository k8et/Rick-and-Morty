{"ast":null,"code":"import { makeObservable, observable, action } from 'mobx';\nclass LocationDetailsStore {\n  constructor() {\n    this.locationDetails = null;\n    this.residents = [];\n    this.fetchLocationDetails = async selectedLocation => {\n      try {\n        const response = await fetch(`https://rickandmortyapi.com/api/location/${selectedLocation}`);\n        const locationData = await response.json();\n        this.setLocationDetails(locationData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    this.fetchResidents = async () => {\n      if (this.locationDetails && this.locationDetails.residents) {\n        const residentsData = [];\n        for (const residentUrl of this.locationDetails.residents) {\n          try {\n            const response = await fetch(residentUrl);\n            const resident = await response.json();\n            residentsData.push(resident);\n          } catch (error) {\n            console.error(error);\n          }\n        }\n        this.setResidents(residentsData);\n      }\n    };\n    this.setLocationDetails = locationData => {\n      this.locationDetails = locationData;\n    };\n    this.setResidents = residentsData => {\n      this.residents = residentsData;\n    };\n    makeObservable(this, {\n      locationDetails: observable,\n      residents: observable,\n      setLocationDetails: action,\n      setResidents: action\n    });\n  }\n}\nexport default LocationDetailsStore;","map":{"version":3,"names":["makeObservable","observable","action","LocationDetailsStore","constructor","locationDetails","residents","fetchLocationDetails","selectedLocation","response","fetch","locationData","json","setLocationDetails","error","console","fetchResidents","residentsData","residentUrl","resident","push","setResidents"],"sources":["/home/k83t/WebstormProjects/React-Project/rick-and-morty/src/store/locationDetailsStore.js"],"sourcesContent":["import { makeObservable, observable, action } from 'mobx';\n\nclass LocationDetailsStore {\n    locationDetails = null;\n    residents = [];\n\n    constructor() {\n        makeObservable(this, {\n            locationDetails: observable,\n            residents: observable,\n            setLocationDetails: action,\n            setResidents: action,\n        });\n    }\n\n    fetchLocationDetails = async (selectedLocation) => {\n        try {\n            const response = await fetch(\n                `https://rickandmortyapi.com/api/location/${selectedLocation}`\n            );\n            const locationData = await response.json();\n            this.setLocationDetails(locationData);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    fetchResidents = async () => {\n        if (this.locationDetails && this.locationDetails.residents) {\n            const residentsData = [];\n            for (const residentUrl of this.locationDetails.residents) {\n                try {\n                    const response = await fetch(residentUrl);\n                    const resident = await response.json();\n                    residentsData.push(resident);\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n            this.setResidents(residentsData);\n        }\n    };\n\n    setLocationDetails = (locationData) => {\n        this.locationDetails = locationData;\n    };\n\n    setResidents = (residentsData) => {\n        this.residents = residentsData;\n    };\n}\n\nexport default LocationDetailsStore;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,UAAU,EAAEC,MAAM,QAAQ,MAAM;AAEzD,MAAMC,oBAAoB,CAAC;EAIvBC,WAAWA,CAAA,EAAG;IAAA,KAHdC,eAAe,GAAG,IAAI;IAAA,KACtBC,SAAS,GAAG,EAAE;IAAA,KAWdC,oBAAoB,GAAG,MAAOC,gBAAgB,IAAK;MAC/C,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,4CAA2CF,gBAAiB,EAAC,CACjE;QACD,MAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAC1C,IAAI,CAACC,kBAAkB,CAACF,YAAY,CAAC;MACzC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAAA,KAEDE,cAAc,GAAG,YAAY;MACzB,IAAI,IAAI,CAACX,eAAe,IAAI,IAAI,CAACA,eAAe,CAACC,SAAS,EAAE;QACxD,MAAMW,aAAa,GAAG,EAAE;QACxB,KAAK,MAAMC,WAAW,IAAI,IAAI,CAACb,eAAe,CAACC,SAAS,EAAE;UACtD,IAAI;YACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACQ,WAAW,CAAC;YACzC,MAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACG,IAAI,EAAE;YACtCK,aAAa,CAACG,IAAI,CAACD,QAAQ,CAAC;UAChC,CAAC,CAAC,OAAOL,KAAK,EAAE;YACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;UACxB;QACJ;QACA,IAAI,CAACO,YAAY,CAACJ,aAAa,CAAC;MACpC;IACJ,CAAC;IAAA,KAEDJ,kBAAkB,GAAIF,YAAY,IAAK;MACnC,IAAI,CAACN,eAAe,GAAGM,YAAY;IACvC,CAAC;IAAA,KAEDU,YAAY,GAAIJ,aAAa,IAAK;MAC9B,IAAI,CAACX,SAAS,GAAGW,aAAa;IAClC,CAAC;IA1CGjB,cAAc,CAAC,IAAI,EAAE;MACjBK,eAAe,EAAEJ,UAAU;MAC3BK,SAAS,EAAEL,UAAU;MACrBY,kBAAkB,EAAEX,MAAM;MAC1BmB,YAAY,EAAEnB;IAClB,CAAC,CAAC;EACN;AAqCJ;AAEA,eAAeC,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}