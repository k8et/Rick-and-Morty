{"ast":null,"code":"import { makeObservable, observable, action, computed } from 'mobx';\nimport axios from 'axios'; // Import axios\n\nclass CharacterStore {\n  constructor() {\n    this.characters = [];\n    this.nameFilter = '';\n    this.speciesFilter = '';\n    this.genderFilter = '';\n    this.statusFilter = '';\n    this.fetchCharacters = () => {\n      axios.get('https://rickandmortyapi.com/api/character').then(response => {\n        const data = response.data;\n        this.characters = data.results;\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n    makeObservable(this, {\n      characters: observable,\n      nameFilter: observable,\n      speciesFilter: observable,\n      genderFilter: observable,\n      statusFilter: observable,\n      fetchCharacters: action,\n      filteredCharacters: computed\n    });\n  }\n  get filteredCharacters() {\n    let filtered = this.characters.slice();\n    if (this.nameFilter) {\n      filtered = filtered.filter(character => character.name.toLowerCase().includes(this.nameFilter.toLowerCase()));\n    }\n    if (this.speciesFilter) {\n      filtered = filtered.filter(character => character.species.toLowerCase() === this.speciesFilter.toLowerCase());\n    }\n    if (this.genderFilter) {\n      filtered = filtered.filter(character => character.gender.toLowerCase() === this.genderFilter.toLowerCase());\n    }\n    if (this.statusFilter) {\n      filtered = filtered.filter(character => character.status.toLowerCase() === this.statusFilter.toLowerCase());\n    }\n    return filtered;\n  }\n}\nexport default CharacterStore;","map":{"version":3,"names":["makeObservable","observable","action","computed","axios","CharacterStore","constructor","characters","nameFilter","speciesFilter","genderFilter","statusFilter","fetchCharacters","get","then","response","data","results","catch","error","console","filteredCharacters","filtered","slice","filter","character","name","toLowerCase","includes","species","gender","status"],"sources":["/home/k83t/WebstormProjects/React-Project/rick-and-morty/src/store/characterStore.js"],"sourcesContent":["import { makeObservable, observable, action, computed } from 'mobx';\nimport axios from 'axios'; // Import axios\n\nclass CharacterStore {\n    characters = [];\n    nameFilter = '';\n    speciesFilter = '';\n    genderFilter = '';\n    statusFilter = '';\n\n    constructor() {\n        makeObservable(this, {\n            characters: observable,\n            nameFilter: observable,\n            speciesFilter: observable,\n            genderFilter: observable,\n            statusFilter: observable,\n            fetchCharacters: action,\n            filteredCharacters: computed,\n        });\n    }\n\n    fetchCharacters = () => {\n        axios.get('https://rickandmortyapi.com/api/character')\n            .then(response => {\n                const data = response.data;\n                this.characters = data.results;\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    get filteredCharacters() {\n        let filtered = this.characters.slice();\n\n        if (this.nameFilter) {\n            filtered = filtered.filter(character =>\n                character.name.toLowerCase().includes(this.nameFilter.toLowerCase())\n            );\n        }\n\n        if (this.speciesFilter) {\n            filtered = filtered.filter(character =>\n                character.species.toLowerCase() === this.speciesFilter.toLowerCase()\n            );\n        }\n\n        if (this.genderFilter) {\n            filtered = filtered.filter(character =>\n                character.gender.toLowerCase() === this.genderFilter.toLowerCase()\n            );\n        }\n\n        if (this.statusFilter) {\n            filtered = filtered.filter(character =>\n                character.status.toLowerCase() === this.statusFilter.toLowerCase()\n            );\n        }\n\n        return filtered;\n    }\n}\n\nexport default CharacterStore;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,MAAM;AACnE,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,MAAMC,cAAc,CAAC;EAOjBC,WAAWA,CAAA,EAAG;IAAA,KANdC,UAAU,GAAG,EAAE;IAAA,KACfC,UAAU,GAAG,EAAE;IAAA,KACfC,aAAa,GAAG,EAAE;IAAA,KAClBC,YAAY,GAAG,EAAE;IAAA,KACjBC,YAAY,GAAG,EAAE;IAAA,KAcjBC,eAAe,GAAG,MAAM;MACpBR,KAAK,CAACS,GAAG,CAAC,2CAA2C,CAAC,CACjDC,IAAI,CAACC,QAAQ,IAAI;QACd,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;QAC1B,IAAI,CAACT,UAAU,GAAGS,IAAI,CAACC,OAAO;MAClC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV,CAAC;IApBGnB,cAAc,CAAC,IAAI,EAAE;MACjBO,UAAU,EAAEN,UAAU;MACtBO,UAAU,EAAEP,UAAU;MACtBQ,aAAa,EAAER,UAAU;MACzBS,YAAY,EAAET,UAAU;MACxBU,YAAY,EAAEV,UAAU;MACxBW,eAAe,EAAEV,MAAM;MACvBmB,kBAAkB,EAAElB;IACxB,CAAC,CAAC;EACN;EAaA,IAAIkB,kBAAkBA,CAAA,EAAG;IACrB,IAAIC,QAAQ,GAAG,IAAI,CAACf,UAAU,CAACgB,KAAK,EAAE;IAEtC,IAAI,IAAI,CAACf,UAAU,EAAE;MACjBc,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAACC,SAAS,IAChCA,SAAS,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACpB,UAAU,CAACmB,WAAW,EAAE,CAAC,CACvE;IACL;IAEA,IAAI,IAAI,CAAClB,aAAa,EAAE;MACpBa,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAACC,SAAS,IAChCA,SAAS,CAACI,OAAO,CAACF,WAAW,EAAE,KAAK,IAAI,CAAClB,aAAa,CAACkB,WAAW,EAAE,CACvE;IACL;IAEA,IAAI,IAAI,CAACjB,YAAY,EAAE;MACnBY,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAACC,SAAS,IAChCA,SAAS,CAACK,MAAM,CAACH,WAAW,EAAE,KAAK,IAAI,CAACjB,YAAY,CAACiB,WAAW,EAAE,CACrE;IACL;IAEA,IAAI,IAAI,CAAChB,YAAY,EAAE;MACnBW,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAACC,SAAS,IAChCA,SAAS,CAACM,MAAM,CAACJ,WAAW,EAAE,KAAK,IAAI,CAAChB,YAAY,CAACgB,WAAW,EAAE,CACrE;IACL;IAEA,OAAOL,QAAQ;EACnB;AACJ;AAEA,eAAejB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}