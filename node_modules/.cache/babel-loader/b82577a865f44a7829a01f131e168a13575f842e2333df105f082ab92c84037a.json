{"ast":null,"code":"import { makeObservable, observable, action, computed } from 'mobx';\nclass CharacterStore {\n  constructor() {\n    this.characters = [];\n    makeObservable(this, {\n      characters: observable,\n      fetchCharacters: action,\n      filteredCharacters: computed,\n      filterByName: action,\n      filterBySpecies: action,\n      filterByGender: action,\n      filterByStatus: action,\n      resetFilters: action\n    });\n  }\n  fetchCharacters() {\n    fetch('https://rickandmortyapi.com/api/character').then(response => response.json()).then(data => {\n      this.characters.replace(data.results);\n      console.log('mobx', data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  get filteredCharacters() {\n    return this.characters.slice();\n  }\n  filterByName(name) {\n    this.fetchCharacters(); // Reset the characters array to fetch all characters again\n    const filteredCharacters = this.characters.filter(character => character.name.toLowerCase().includes(name.toLowerCase()));\n    this.characters.replace(filteredCharacters);\n  }\n  filterBySpecies(species) {\n    this.fetchCharacters(); // Reset the characters array to fetch all characters again\n    const filteredCharacters = this.characters.filter(character => character.species.toLowerCase() === species.toLowerCase());\n    this.characters.replace(filteredCharacters);\n  }\n  filterByGender(gender) {\n    this.fetchCharacters(); // Reset the characters array to fetch all characters again\n    const filteredCharacters = this.characters.filter(character => character.gender.toLowerCase() === gender.toLowerCase());\n    this.characters.replace(filteredCharacters);\n  }\n  filterByStatus(status) {\n    this.fetchCharacters(); // Reset the characters array to fetch all characters again\n    const filteredCharacters = this.characters.filter(character => character.status.toLowerCase() === status.toLowerCase());\n    this.characters.replace(filteredCharacters);\n  }\n  resetFilters() {\n    this.fetchCharacters();\n  }\n}\nconst store = new CharacterStore();\nexport default store;","map":{"version":3,"names":["makeObservable","observable","action","computed","CharacterStore","constructor","characters","fetchCharacters","filteredCharacters","filterByName","filterBySpecies","filterByGender","filterByStatus","resetFilters","fetch","then","response","json","data","replace","results","console","log","catch","error","slice","name","filter","character","toLowerCase","includes","species","gender","status","store"],"sources":["/home/k83t/WebstormProjects/React-Project/rick-and-morty/src/screen/charactes/index.js"],"sourcesContent":["import { makeObservable, observable, action, computed } from 'mobx';\n\nclass CharacterStore {\n  characters = [];\n\n  constructor() {\n    makeObservable(this, {\n      characters: observable,\n      fetchCharacters: action,\n      filteredCharacters: computed,\n      filterByName: action,\n      filterBySpecies: action,\n      filterByGender: action,\n      filterByStatus: action,\n      resetFilters: action,\n    });\n  }\n\n  fetchCharacters() {\n    fetch('https://rickandmortyapi.com/api/character')\n        .then(response => response.json())\n        .then(data => {\n          this.characters.replace(data.results);\n          console.log('mobx', data);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n  }\n\n  get filteredCharacters() {\n    return this.characters.slice();\n  }\n\n  filterByName(name) {\n    this.fetchCharacters(); // Reset the characters array to fetch all characters again\n    const filteredCharacters = this.characters.filter(character =>\n        character.name.toLowerCase().includes(name.toLowerCase())\n    );\n    this.characters.replace(filteredCharacters);\n  }\n\n  filterBySpecies(species) {\n    this.fetchCharacters(); // Reset the characters array to fetch all characters again\n    const filteredCharacters = this.characters.filter(character =>\n        character.species.toLowerCase() === species.toLowerCase()\n    );\n    this.characters.replace(filteredCharacters);\n  }\n\n  filterByGender(gender) {\n    this.fetchCharacters(); // Reset the characters array to fetch all characters again\n    const filteredCharacters = this.characters.filter(character =>\n        character.gender.toLowerCase() === gender.toLowerCase()\n    );\n    this.characters.replace(filteredCharacters);\n  }\n\n  filterByStatus(status) {\n    this.fetchCharacters(); // Reset the characters array to fetch all characters again\n    const filteredCharacters = this.characters.filter(character =>\n        character.status.toLowerCase() === status.toLowerCase()\n    );\n    this.characters.replace(filteredCharacters);\n  }\n\n  resetFilters() {\n    this.fetchCharacters();\n  }\n}\n\nconst store = new CharacterStore();\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,MAAM;AAEnE,MAAMC,cAAc,CAAC;EAGnBC,WAAWA,CAAA,EAAG;IAAA,KAFdC,UAAU,GAAG,EAAE;IAGbN,cAAc,CAAC,IAAI,EAAE;MACnBM,UAAU,EAAEL,UAAU;MACtBM,eAAe,EAAEL,MAAM;MACvBM,kBAAkB,EAAEL,QAAQ;MAC5BM,YAAY,EAAEP,MAAM;MACpBQ,eAAe,EAAER,MAAM;MACvBS,cAAc,EAAET,MAAM;MACtBU,cAAc,EAAEV,MAAM;MACtBW,YAAY,EAAEX;IAChB,CAAC,CAAC;EACJ;EAEAK,eAAeA,CAAA,EAAG;IAChBO,KAAK,CAAC,2CAA2C,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAI,CAACZ,UAAU,CAACa,OAAO,CAACD,IAAI,CAACE,OAAO,CAAC;MACrCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACR;EAEA,IAAIhB,kBAAkBA,CAAA,EAAG;IACvB,OAAO,IAAI,CAACF,UAAU,CAACmB,KAAK,EAAE;EAChC;EAEAhB,YAAYA,CAACiB,IAAI,EAAE;IACjB,IAAI,CAACnB,eAAe,EAAE,CAAC,CAAC;IACxB,MAAMC,kBAAkB,GAAG,IAAI,CAACF,UAAU,CAACqB,MAAM,CAACC,SAAS,IACvDA,SAAS,CAACF,IAAI,CAACG,WAAW,EAAE,CAACC,QAAQ,CAACJ,IAAI,CAACG,WAAW,EAAE,CAAC,CAC5D;IACD,IAAI,CAACvB,UAAU,CAACa,OAAO,CAACX,kBAAkB,CAAC;EAC7C;EAEAE,eAAeA,CAACqB,OAAO,EAAE;IACvB,IAAI,CAACxB,eAAe,EAAE,CAAC,CAAC;IACxB,MAAMC,kBAAkB,GAAG,IAAI,CAACF,UAAU,CAACqB,MAAM,CAACC,SAAS,IACvDA,SAAS,CAACG,OAAO,CAACF,WAAW,EAAE,KAAKE,OAAO,CAACF,WAAW,EAAE,CAC5D;IACD,IAAI,CAACvB,UAAU,CAACa,OAAO,CAACX,kBAAkB,CAAC;EAC7C;EAEAG,cAAcA,CAACqB,MAAM,EAAE;IACrB,IAAI,CAACzB,eAAe,EAAE,CAAC,CAAC;IACxB,MAAMC,kBAAkB,GAAG,IAAI,CAACF,UAAU,CAACqB,MAAM,CAACC,SAAS,IACvDA,SAAS,CAACI,MAAM,CAACH,WAAW,EAAE,KAAKG,MAAM,CAACH,WAAW,EAAE,CAC1D;IACD,IAAI,CAACvB,UAAU,CAACa,OAAO,CAACX,kBAAkB,CAAC;EAC7C;EAEAI,cAAcA,CAACqB,MAAM,EAAE;IACrB,IAAI,CAAC1B,eAAe,EAAE,CAAC,CAAC;IACxB,MAAMC,kBAAkB,GAAG,IAAI,CAACF,UAAU,CAACqB,MAAM,CAACC,SAAS,IACvDA,SAAS,CAACK,MAAM,CAACJ,WAAW,EAAE,KAAKI,MAAM,CAACJ,WAAW,EAAE,CAC1D;IACD,IAAI,CAACvB,UAAU,CAACa,OAAO,CAACX,kBAAkB,CAAC;EAC7C;EAEAK,YAAYA,CAAA,EAAG;IACb,IAAI,CAACN,eAAe,EAAE;EACxB;AACF;AAEA,MAAM2B,KAAK,GAAG,IAAI9B,cAAc,EAAE;AAElC,eAAe8B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}