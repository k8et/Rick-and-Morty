{"ast":null,"code":"import { makeObservable, observable, action, computed } from 'mobx';\nclass EpisodeStore {\n  constructor() {\n    this.episodes = [];\n    this.nameFilter = '';\n    this.fetchEpisodes = () => {\n      fetch('https://rickandmortyapi.com/api/episode').then(response => response.json()).then(data => {\n        this.episodes = data.results;\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n    makeObservable(this, {\n      episodes: observable,\n      nameFilter: observable,\n      fetchEpisodes: action,\n      filteredEpisodes: computed\n    });\n  }\n  get filteredEpisodes() {\n    let filtered = this.episodes.slice();\n    if (this.nameFilter) {\n      filtered = filtered.filter(episode => episode.name.toLowerCase().includes(this.nameFilter.toLowerCase()));\n    }\n    return filtered;\n  }\n}\nexport default EpisodeStore;","map":{"version":3,"names":["makeObservable","observable","action","computed","EpisodeStore","constructor","episodes","nameFilter","fetchEpisodes","fetch","then","response","json","data","results","catch","error","console","filteredEpisodes","filtered","slice","filter","episode","name","toLowerCase","includes"],"sources":["/home/k83t/WebstormProjects/React-Project/rick-and-morty/src/store/episodeStore.js"],"sourcesContent":["import { makeObservable, observable, action, computed } from 'mobx';\n\nclass EpisodeStore {\n    episodes = [];\n    nameFilter = '';\n\n    constructor() {\n        makeObservable(this, {\n            episodes: observable,\n            nameFilter: observable,\n            fetchEpisodes: action,\n            filteredEpisodes: computed,\n        });\n    }\n\n    fetchEpisodes = () => {\n        fetch('https://rickandmortyapi.com/api/episode')\n            .then(response => response.json())\n            .then(data => {\n                this.episodes = data.results;\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    get filteredEpisodes() {\n        let filtered = this.episodes.slice();\n\n        if (this.nameFilter) {\n            filtered = filtered.filter(episode =>\n                episode.name.toLowerCase().includes(this.nameFilter.toLowerCase())\n            );\n        }\n\n        return filtered;\n    }\n}\n\nexport default EpisodeStore;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,MAAM;AAEnE,MAAMC,YAAY,CAAC;EAIfC,WAAWA,CAAA,EAAG;IAAA,KAHdC,QAAQ,GAAG,EAAE;IAAA,KACbC,UAAU,GAAG,EAAE;IAAA,KAWfC,aAAa,GAAG,MAAM;MAClBC,KAAK,CAAC,yCAAyC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACV,IAAI,CAACP,QAAQ,GAAGO,IAAI,CAACC,OAAO;MAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV,CAAC;IAjBGhB,cAAc,CAAC,IAAI,EAAE;MACjBM,QAAQ,EAAEL,UAAU;MACpBM,UAAU,EAAEN,UAAU;MACtBO,aAAa,EAAEN,MAAM;MACrBgB,gBAAgB,EAAEf;IACtB,CAAC,CAAC;EACN;EAaA,IAAIe,gBAAgBA,CAAA,EAAG;IACnB,IAAIC,QAAQ,GAAG,IAAI,CAACb,QAAQ,CAACc,KAAK,EAAE;IAEpC,IAAI,IAAI,CAACb,UAAU,EAAE;MACjBY,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAACC,OAAO,IAC9BA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAACiB,WAAW,EAAE,CAAC,CACrE;IACL;IAEA,OAAOL,QAAQ;EACnB;AACJ;AAEA,eAAef,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}