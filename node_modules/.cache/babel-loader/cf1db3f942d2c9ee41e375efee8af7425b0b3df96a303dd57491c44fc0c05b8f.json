{"ast":null,"code":"import { makeObservable, observable, action, computed } from 'mobx';\nclass CharacterStore {\n  constructor() {\n    this.characters = [];\n    this.filteredCharacters = [];\n    makeObservable(this, {\n      characters: observable,\n      filteredCharacters: observable,\n      fetchCharacters: action,\n      filterByName: action,\n      filterBySpecies: action,\n      filterByGender: action,\n      filterByStatus: action,\n      resetFilters: action\n    });\n  }\n  fetchCharacters() {\n    fetch('https://rickandmortyapi.com/api/character').then(response => response.json()).then(data => {\n      this.characters.replace(data.results);\n      this.filteredCharacters.replace(data.results); // Initialize filteredCharacters with all characters\n      console.log('mobx', data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  get filteredCharactersArray() {\n    return this.filteredCharacters.slice();\n  }\n  filterByName(name) {\n    const filteredCharacters = this.characters.filter(character => character.name.toLowerCase().includes(name.toLowerCase()));\n    this.filteredCharacters.replace(filteredCharacters);\n  }\n  filterBySpecies(species) {\n    const filteredCharacters = this.characters.filter(character => character.species.toLowerCase() === species.toLowerCase());\n    this.filteredCharacters.replace(filteredCharacters);\n  }\n  filterByGender(gender) {\n    const filteredCharacters = this.characters.filter(character => character.gender.toLowerCase() === gender.toLowerCase());\n    this.filteredCharacters.replace(filteredCharacters);\n  }\n  filterByStatus(status) {\n    const filteredCharacters = this.characters.filter(character => character.status.toLowerCase() === status.toLowerCase());\n    this.filteredCharacters.replace(filteredCharacters);\n  }\n  resetFilters() {\n    this.filteredCharacters.replace(this.characters.slice());\n  }\n}\nconst store = new CharacterStore();\nexport default store;","map":{"version":3,"names":["makeObservable","observable","action","computed","CharacterStore","constructor","characters","filteredCharacters","fetchCharacters","filterByName","filterBySpecies","filterByGender","filterByStatus","resetFilters","fetch","then","response","json","data","replace","results","console","log","catch","error","filteredCharactersArray","slice","name","filter","character","toLowerCase","includes","species","gender","status","store"],"sources":["/home/k83t/WebstormProjects/React-Project/rick-and-morty/src/components/store/characterStore.js"],"sourcesContent":["import { makeObservable, observable, action, computed } from 'mobx';\n\nclass CharacterStore {\n    characters = [];\n    filteredCharacters = [];\n\n    constructor() {\n        makeObservable(this, {\n            characters: observable,\n            filteredCharacters: observable,\n            fetchCharacters: action,\n            filterByName: action,\n            filterBySpecies: action,\n            filterByGender: action,\n            filterByStatus: action,\n            resetFilters: action,\n        });\n    }\n\n    fetchCharacters() {\n        fetch('https://rickandmortyapi.com/api/character')\n            .then(response => response.json())\n            .then(data => {\n                this.characters.replace(data.results);\n                this.filteredCharacters.replace(data.results); // Initialize filteredCharacters with all characters\n                console.log('mobx', data);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    get filteredCharactersArray() {\n        return this.filteredCharacters.slice();\n    }\n\n    filterByName(name) {\n        const filteredCharacters = this.characters.filter(character =>\n            character.name.toLowerCase().includes(name.toLowerCase())\n        );\n        this.filteredCharacters.replace(filteredCharacters);\n    }\n\n    filterBySpecies(species) {\n        const filteredCharacters = this.characters.filter(character =>\n            character.species.toLowerCase() === species.toLowerCase()\n        );\n        this.filteredCharacters.replace(filteredCharacters);\n    }\n\n    filterByGender(gender) {\n        const filteredCharacters = this.characters.filter(character =>\n            character.gender.toLowerCase() === gender.toLowerCase()\n        );\n        this.filteredCharacters.replace(filteredCharacters);\n    }\n\n    filterByStatus(status) {\n        const filteredCharacters = this.characters.filter(character =>\n            character.status.toLowerCase() === status.toLowerCase()\n        );\n        this.filteredCharacters.replace(filteredCharacters);\n    }\n\n    resetFilters() {\n        this.filteredCharacters.replace(this.characters.slice());\n    }\n}\n\nconst store = new CharacterStore();\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,MAAM;AAEnE,MAAMC,cAAc,CAAC;EAIjBC,WAAWA,CAAA,EAAG;IAAA,KAHdC,UAAU,GAAG,EAAE;IAAA,KACfC,kBAAkB,GAAG,EAAE;IAGnBP,cAAc,CAAC,IAAI,EAAE;MACjBM,UAAU,EAAEL,UAAU;MACtBM,kBAAkB,EAAEN,UAAU;MAC9BO,eAAe,EAAEN,MAAM;MACvBO,YAAY,EAAEP,MAAM;MACpBQ,eAAe,EAAER,MAAM;MACvBS,cAAc,EAAET,MAAM;MACtBU,cAAc,EAAEV,MAAM;MACtBW,YAAY,EAAEX;IAClB,CAAC,CAAC;EACN;EAEAM,eAAeA,CAAA,EAAG;IACdM,KAAK,CAAC,2CAA2C,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,IAAI,CAACZ,UAAU,CAACa,OAAO,CAACD,IAAI,CAACE,OAAO,CAAC;MACrC,IAAI,CAACb,kBAAkB,CAACY,OAAO,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;MAC/CC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV;EAEA,IAAIC,uBAAuBA,CAAA,EAAG;IAC1B,OAAO,IAAI,CAAClB,kBAAkB,CAACmB,KAAK,EAAE;EAC1C;EAEAjB,YAAYA,CAACkB,IAAI,EAAE;IACf,MAAMpB,kBAAkB,GAAG,IAAI,CAACD,UAAU,CAACsB,MAAM,CAACC,SAAS,IACvDA,SAAS,CAACF,IAAI,CAACG,WAAW,EAAE,CAACC,QAAQ,CAACJ,IAAI,CAACG,WAAW,EAAE,CAAC,CAC5D;IACD,IAAI,CAACvB,kBAAkB,CAACY,OAAO,CAACZ,kBAAkB,CAAC;EACvD;EAEAG,eAAeA,CAACsB,OAAO,EAAE;IACrB,MAAMzB,kBAAkB,GAAG,IAAI,CAACD,UAAU,CAACsB,MAAM,CAACC,SAAS,IACvDA,SAAS,CAACG,OAAO,CAACF,WAAW,EAAE,KAAKE,OAAO,CAACF,WAAW,EAAE,CAC5D;IACD,IAAI,CAACvB,kBAAkB,CAACY,OAAO,CAACZ,kBAAkB,CAAC;EACvD;EAEAI,cAAcA,CAACsB,MAAM,EAAE;IACnB,MAAM1B,kBAAkB,GAAG,IAAI,CAACD,UAAU,CAACsB,MAAM,CAACC,SAAS,IACvDA,SAAS,CAACI,MAAM,CAACH,WAAW,EAAE,KAAKG,MAAM,CAACH,WAAW,EAAE,CAC1D;IACD,IAAI,CAACvB,kBAAkB,CAACY,OAAO,CAACZ,kBAAkB,CAAC;EACvD;EAEAK,cAAcA,CAACsB,MAAM,EAAE;IACnB,MAAM3B,kBAAkB,GAAG,IAAI,CAACD,UAAU,CAACsB,MAAM,CAACC,SAAS,IACvDA,SAAS,CAACK,MAAM,CAACJ,WAAW,EAAE,KAAKI,MAAM,CAACJ,WAAW,EAAE,CAC1D;IACD,IAAI,CAACvB,kBAAkB,CAACY,OAAO,CAACZ,kBAAkB,CAAC;EACvD;EAEAM,YAAYA,CAAA,EAAG;IACX,IAAI,CAACN,kBAAkB,CAACY,OAAO,CAAC,IAAI,CAACb,UAAU,CAACoB,KAAK,EAAE,CAAC;EAC5D;AACJ;AAEA,MAAMS,KAAK,GAAG,IAAI/B,cAAc,EAAE;AAElC,eAAe+B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}