{"ast":null,"code":"import { makeObservable, observable, action, computed } from 'mobx';\nclass CharacterStore {\n  constructor() {\n    this.characters = [];\n    makeObservable(this, {\n      characters: observable,\n      fetchCharacters: action,\n      filteredCharacters: computed,\n      filterByName: action,\n      filterBySpecies: action,\n      filterByGender: action,\n      filterByStatus: action,\n      resetFilters: action\n    });\n  }\n  fetchCharacters() {\n    fetch('https://rickandmortyapi.com/api/character').then(response => response.json()).then(data => {\n      this.characters = data.results;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  get filteredCharacters() {\n    return this.characters.slice();\n  }\n  filterByName(name) {\n    this.characters.replace(this.characters.filter(character => character.name.toLowerCase().includes(name.toLowerCase())));\n  }\n  filterBySpecies(species) {\n    this.characters.replace(this.characters.filter(character => character.species.toLowerCase() === species.toLowerCase()));\n  }\n  filterByGender(gender) {\n    this.characters.replace(this.characters.filter(character => character.gender.toLowerCase() === gender.toLowerCase()));\n  }\n  filterByStatus(status) {\n    this.characters.replace(this.characters.filter(character => character.status.toLowerCase() === status.toLowerCase()));\n  }\n  resetFilters() {\n    this.characters.replace([]);\n    this.fetchCharacters();\n  }\n}\nconst store = new CharacterStore();\nexport default store;","map":{"version":3,"names":["makeObservable","observable","action","computed","CharacterStore","constructor","characters","fetchCharacters","filteredCharacters","filterByName","filterBySpecies","filterByGender","filterByStatus","resetFilters","fetch","then","response","json","data","results","catch","error","console","slice","name","replace","filter","character","toLowerCase","includes","species","gender","status","store"],"sources":["/home/k83t/WebstormProjects/React-Project/rick-and-morty/src/components/store/characterStore.js"],"sourcesContent":["import { makeObservable, observable, action, computed } from 'mobx';\n\nclass CharacterStore {\n    characters = [];\n\n    constructor() {\n        makeObservable(this, {\n            characters: observable,\n            fetchCharacters: action,\n            filteredCharacters: computed,\n            filterByName: action,\n            filterBySpecies: action,\n            filterByGender: action,\n            filterByStatus: action,\n            resetFilters: action,\n        });\n    }\n\n    fetchCharacters() {\n        fetch('https://rickandmortyapi.com/api/character')\n            .then(response => response.json())\n            .then(data => {\n                this.characters = data.results;\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    get filteredCharacters() {\n        return this.characters.slice();\n    }\n\n    filterByName(name) {\n        this.characters.replace(\n            this.characters.filter(character => character.name.toLowerCase().includes(name.toLowerCase()))\n        );\n    }\n\n    filterBySpecies(species) {\n        this.characters.replace(\n            this.characters.filter(character => character.species.toLowerCase() === species.toLowerCase())\n        );\n    }\n\n    filterByGender(gender) {\n        this.characters.replace(\n            this.characters.filter(character => character.gender.toLowerCase() === gender.toLowerCase())\n        );\n    }\n\n    filterByStatus(status) {\n        this.characters.replace(\n            this.characters.filter(character => character.status.toLowerCase() === status.toLowerCase())\n        );\n    }\n\n    resetFilters() {\n        this.characters.replace([]);\n        this.fetchCharacters();\n    }\n}\n\nconst store = new CharacterStore();\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,MAAM;AAEnE,MAAMC,cAAc,CAAC;EAGjBC,WAAWA,CAAA,EAAG;IAAA,KAFdC,UAAU,GAAG,EAAE;IAGXN,cAAc,CAAC,IAAI,EAAE;MACjBM,UAAU,EAAEL,UAAU;MACtBM,eAAe,EAAEL,MAAM;MACvBM,kBAAkB,EAAEL,QAAQ;MAC5BM,YAAY,EAAEP,MAAM;MACpBQ,eAAe,EAAER,MAAM;MACvBS,cAAc,EAAET,MAAM;MACtBU,cAAc,EAAEV,MAAM;MACtBW,YAAY,EAAEX;IAClB,CAAC,CAAC;EACN;EAEAK,eAAeA,CAAA,EAAG;IACdO,KAAK,CAAC,2CAA2C,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,IAAI,CAACZ,UAAU,GAAGY,IAAI,CAACC,OAAO;IAClC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV;EAEA,IAAIb,kBAAkBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACF,UAAU,CAACiB,KAAK,EAAE;EAClC;EAEAd,YAAYA,CAACe,IAAI,EAAE;IACf,IAAI,CAAClB,UAAU,CAACmB,OAAO,CACnB,IAAI,CAACnB,UAAU,CAACoB,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACH,IAAI,CAACI,WAAW,EAAE,CAACC,QAAQ,CAACL,IAAI,CAACI,WAAW,EAAE,CAAC,CAAC,CACjG;EACL;EAEAlB,eAAeA,CAACoB,OAAO,EAAE;IACrB,IAAI,CAACxB,UAAU,CAACmB,OAAO,CACnB,IAAI,CAACnB,UAAU,CAACoB,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACG,OAAO,CAACF,WAAW,EAAE,KAAKE,OAAO,CAACF,WAAW,EAAE,CAAC,CACjG;EACL;EAEAjB,cAAcA,CAACoB,MAAM,EAAE;IACnB,IAAI,CAACzB,UAAU,CAACmB,OAAO,CACnB,IAAI,CAACnB,UAAU,CAACoB,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACI,MAAM,CAACH,WAAW,EAAE,KAAKG,MAAM,CAACH,WAAW,EAAE,CAAC,CAC/F;EACL;EAEAhB,cAAcA,CAACoB,MAAM,EAAE;IACnB,IAAI,CAAC1B,UAAU,CAACmB,OAAO,CACnB,IAAI,CAACnB,UAAU,CAACoB,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACK,MAAM,CAACJ,WAAW,EAAE,KAAKI,MAAM,CAACJ,WAAW,EAAE,CAAC,CAC/F;EACL;EAEAf,YAAYA,CAAA,EAAG;IACX,IAAI,CAACP,UAAU,CAACmB,OAAO,CAAC,EAAE,CAAC;IAC3B,IAAI,CAAClB,eAAe,EAAE;EAC1B;AACJ;AAEA,MAAM0B,KAAK,GAAG,IAAI7B,cAAc,EAAE;AAElC,eAAe6B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}